// ============================================
// Twnkl scene specification
//
// October 7th 2023
// ============================================

{project
description=
author=
}

// ============================================
// camera
// ============================================

{camera
width=
height=
focallength=
from=x, y, z
to=x, y, z
up=x, y, z
}

// ============================================
// light
// ============================================

{arealight
name=
colour=r, g, b
position=x, y, z
samples=n							// detail, must be > 0 (default is 8)
}

{pointlight
name=
colour=r, g, b
position=x, y, z
}

// ============================================
// primitive
// ============================================

{objectcone
name=
minimum=
maximum=
closed=
}

{objectcube
name=
}

{objectcylinder
name=
minimum=
maximum=
closed=
}

{objectplane
name=
}

{objectsphere
name=
}

// ============================================
// object with loaded geometry (obj file)
// supports only wavefront obj files currently 
// (only object, not texture or material)
// ============================================

{objectmodel
name=
filename=							// path relative to scene file
}

// ============================================
// transform (applied to objects and patterns)
// ============================================

// order or transforms is important

{transform
type=translate
xyz=x, y, z
}

{transform
type=scale
xyz=x, y, z
}

{transform
type=rotatex
angle=								// in radians
}

{transform
type=rotatey
angle=								// in radians
}

{transform
type=rotatez
angle=								// in radians
}

// ============================================
// material
// ============================================
// all parameters are optional
// default values are
//     {material
//     colour=1, 1, 1
//     ambient=0.1
//     diffuse=0.9
//     reflectivity=0
//     refractiveindex=1
//     shininess=200
//     specular=0.9
//     transparency=0.0
//     }

{material
colour=r, g, b
ambient=							// 0.0 to 1.0
diffuse=							// 0.0 to 1.0
reflectivity=						// 0.0 to 1.0	
refractiveindex=					// 1.0 to 5.0
shininess=							// 0 and above (200-300 is a sweetspot)
specular=							// 0.0 to 1.0
transparency=						// 0.0 to 1.0
}

// ============================================
// pattern #1
// ============================================

{patternchecker
colour=r, g, b
colour=r, g, b
u=									// only for cube/cylinder/spherical objects
v=									// only for cube/cylinder/spherical objects
noise=true							// if true, the following six options become available
frequency=							// default is 1.0
amplitude=							// default is 1.0
lacunarity=							// default is 2.0
persistence=						// default is 0.5
npscale=                            // default is 0.9
nscale=                             // default is 0.1
}

// modified perlin
{patternfractal
{
colour=r, g, b
colour=r, g, b
frequency=							// default is 1.0
amplitude=							// default is 1.0
lacunarity=							// default is 2.0
persistence=						// default is 0.5
}

{patterngradient
colour=r, g, b
colour=r, g, b
noise=true							// if true, the following four options become available
frequency=							// default is 1.0
amplitude=							// default is 1.0
lacunarity=							// default is 2.0
persistence=						// default is 0.5
npscale=                            // default is 0.9
nscale=                             // default is 0.1
}

{patterngradient2
colour=r, g, b
colour=r, g, b
noise=true							// if true, the following four options become available
frequency=							// default is 1.0
amplitude=							// default is 1.0
lacunarity=							// default is 2.0
persistence=						// default is 0.5
npscale=                            // default is 0.9
nscale=                             // default is 0.1
}

// for sphere, works best when texture width (u) is 2x height (v) (eg 256x128)
{patternperlin
colour=r,g,b
u=
v=
scale=								// default is 1.0
}

// for sphere, works best when texture width (u) is 2x height (v) (eg 256x128)
{patternperlin2
colour=r,g,b
u=
v=
scale=								// default is 1.0
}

// for sphere, works best when texture width (u) is 2x height (v) (eg 256x128)
{patternperlin3
colour=r,g,b
u=
v=
phase=								// default is 10, higher values equal harsher transitions
scale=								// default is 1.0
}

{patternring
colour=r, g, b
colour=r, g, b
}

// perlin simplex. setting simple=yes will limit the pattern to the two colours specified (with no gradient between)
{patternsimplex
colour=r, g, b
colour=r, g, b
simple=yes
}

{patternstripey
colour=r, g, b
colour=r, g, b
noise=true							// if true, the following four options become available
frequency=							// default is 1.0
amplitude=							// default is 1.0
lacunarity=							// default is 2.0
persistence=						// default is 0.5
npscale=                            // default is 0.9
nscale=                             // default is 0.1
}

// for sphere, plane, cylinder, cone, cube (texture is repeated on each side)
// for sphere, works best when texture width is 2x height (eg 256x128)
{patterntexture
process=greyscale
filename=
noise=true							// if true, the following four options become available
frequency=							// default is 1.0
amplitude=							// default is 1.0
lacunarity=							// default is 2.0
persistence=						// default is 0.5
npscale=                            // default is 0.9
nscale=                             // default is 0.1
}

// multi-texture for cubes (each side has a separate texture)
// expects 6 textures, where an * in the file path is replaced with the numbers 1 to 6
{patterntexture
filename=texture_*.ppm
noise=true							// if true, the following four options become available
frequency=							// default is 1.0
amplitude=							// default is 1.0
lacunarity=							// default is 2.0
persistence=						// default is 0.5
npscale=                            // default is 0.9
nscale=                             // default is 0.1
}